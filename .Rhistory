gme_tibble_mean = tibble(Date = threads$created_utc,
Count_of_Comments = threads$num_comments,
URL =  threads$url,
mean = rep(0))
##### analyse thread -----------
summarize_thread = function(content_array){
anzahl_comments = nrow(content_array$comments)
sentiment = rep(0,anzahl_comments-1)
for(j in 2:anzahl_comments){
comment = content_array$comments$comment[j]
saetze = get_sentences(comment)
sentiment[j-1] = mean(get_sentiment(saetze))*content_array$comments$score[j] #weighted by score
}
return(mean(sentiment))
}
pb = txtProgressBar(min = 0, max = n, initial = 0, style = 3)
for (i in 1:n) { # gehe durch alle threads
tryCatch(expr = {thread_content = get_thread_content(gme_tibble_mean$URL[i])
gme_tibble_mean$mean[i] = summarize_thread(thread_content)},
error = function(e){
print(sprintf("Error im Lauf %s", i))
},
finally ={setTxtProgressBar(pb, i)})
}
close(pb)
ggplot(data = gme_tibble_mean[1:n,])+
geom_point(mapping = aes(x = Date, y = mean, col = Count_of_Comments), show.legend = TRUE)+
scale_color_gradient(low="red", high="green")
##### Sorge dafÃ¼r, dass es nur einen wert pro tag gibt ----
gme_tibble_mean = na.omit(gme_tibble_mean)
gme_date_discrete = select(gme_tibble_mean, - "URL") %>% group_by(Date) %>% summarise(mean = weighted.mean(x = mean, w = Count_of_Comments ), sum_com = sum(Count_of_Comments))
#save data
write.csv(gme_date_discrete, file = "gme_date_discrete.csv")
#plot
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0)
>>>>>>> be6a703d9ea0f75eebd914c2d90e5f710b76f9b9
summary(lm_reg)
sentiment_frame = read_csv("gme_date_discrete.csv")
library(tidyverse)
sentiment_frame = read_csv("gme_date_discrete.csv")
sentiment_frame = sentiment_frame[,-1]
sentiment_frame = sentiment_frame %>% mutate(week_day = weekdays((Date)))
week_day_add = rep(1,nrow(sentiment_frame))
week_day_add[sentiment_frame$week_day == "Samstag"] = 2
week_day_add[sentiment_frame$week_day == "Freitag"] = 3
week_day_add[sentiment_frame$week_day == "Donnerstag"] = 3
sentiment_frame = sentiment_frame %>% mutate(week_day_add = week_day_add)
sentiment_frame = sentiment_frame %>% mutate(day_to_pred = Date + week_day_add)
write.csv(sentiment_frame, "sentiment_frame_one_lag.csv")
gme_sap = read_csv(file = "Stock_Data.csv")
sentiment = read_csv(file = "sentiment_frame_one_lag.csv.csv")
sentiment = read_csv(file = "sentiment_frame_one_lag.csv.csv")
sentiment = read_csv(file = "sentiment_frame_one_lag.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
gme_sap %>% view()
sentiment %>% view()
gme_sap %>% view()
view(gme_sap )
view(sentiment )
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
view(full_data)
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
#---- Regression
lm_reg = lm(formula = gme_change~mean +sum_com + mean*sum_com, data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
summary(lm_reg)
summary(lm_reg_controlls)
sentiment_frame = read_csv("gme_date_discrete.csv")
sentiment_frame = sentiment_frame[,-1]
sentiment_frame = sentiment_frame %>% mutate(week_day = weekdays((Date)))
week_day_add = rep(1,nrow(sentiment_frame))
week_day_add[sentiment_frame$week_day == "Sonntag"] = 1
week_day_add[sentiment_frame$week_day == "Samstag"] = 2
week_day_add[sentiment_frame$week_day == "Freitag"] = 3
week_day_add[sentiment_frame$week_day == "Donnerstag"] = 1
sentiment_frame = sentiment_frame %>% mutate(week_day_add = week_day_add)
sentiment_frame = sentiment_frame %>% mutate(day_to_pred = Date + week_day_add)
write.csv(sentiment_frame, "sentiment_frame_one_lag.csv")
gme_sap = read_csv(file = "Stock_Data.csv")
sentiment = read_csv(file = "sentiment_frame_one_lag.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
#---- Regression
lm_reg = lm(formula = gme_change~mean +sum_com + mean*sum_com, data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
summary(lm_reg_controlls)
summary(lm_reg)
sentiment_frame = read_csv("gme_date_discrete.csv")
sentiment_frame = sentiment_frame[,-1]
sentiment_frame = sentiment_frame %>% mutate(week_day = weekdays((Date)))
week_day_add = rep(0,nrow(sentiment_frame))
week_day_add[sentiment_frame$week_day == "Sonntag"] = 1
week_day_add[sentiment_frame$week_day == "Samstag"] = 2
week_day_add[sentiment_frame$week_day == "Freitag"] = 0
week_day_add[sentiment_frame$week_day == "Donnerstag"] = 0
sentiment_frame = sentiment_frame %>% mutate(week_day_add = week_day_add)
sentiment_frame = sentiment_frame %>% mutate(day_to_pred = Date + week_day_add)
write.csv(sentiment_frame, "sentiment_frame_no_lag.csv")
gme_sap = read_csv(file = "Stock_Data.csv")
sentiment = read_csv(file = "sentiment_frame_one_lag.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
#---- Regression
lm_reg = lm(formula = gme_change~mean +sum_com + mean*sum_com, data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
summary(lm_reg)
gme_sap = read_csv(file = "Stock_Data.csv")
sentiment = read_csv(file = "sentiment_frame_no_lag.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
#---- Regression
lm_reg = lm(formula = gme_change~mean +sum_com + mean*sum_com, data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
summary(lm_reg)
summary(lm_reg_controlls)
load("D:/Program Files (x86)/OneDrive/Dokumente/Coding/R_Spielerei/Wallstreet_bets/Wallstreat_Bets/.RData")
gme_tibble_mean
library(syuzhet)
library(tidyverse)
library(RedditExtractoR)
#plot
gme_date_discrete = read_csv("gme_date_discrete.csv")
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0)
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com, ylab = "test"), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0)
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +ylab("test")
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +ylab("Durchschnittliches Sentiment")
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
gme_date_discrete
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare")
gme_date_discrete
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare")
+theme(plot.title = element_text(size = 20, face = "bold", color = "darkgreen") )
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 20, face = "bold", color = "darkgreen"))
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 15, face = "bold", color = "grey"))
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 15, face = "bold", color = "darkgrey"))
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 15, face = "bold", color = "darkgrey"))
library(tidyverse)
ggplot(data = data) + geom_histogram(mapping = aes(x = data$num_comments))
data = read_csv("pushshift.csv")
data$created_utc = as.Date(as.POSIXct(data$created_utc, origin="1970-01-01"))
data = select(data, -c(d_,created))
ggplot(data = data, mapping = aes(x=created_utc, y = num_comments))+
geom_point()
data = data[str_detect(data$url, "comments"),] #url ohne comment sind bilder/memes/videos
data = data %>% filter(data$num_comments > 2) ##weniger als 3 Kommentare entweder irrelvant, gelÃ¶scht oder Bot
Anzahl_Kommentare = sum(data$num_comments)
view(data)
ggplot(data = data) + geom_histogram(mapping = aes(x = data$num_comments))
ggplot(data = data) + geom_histogram(mapping = aes(x = data$num_comments), bins = 5)
ggplot(data = data) + geom_histogram(mapping = aes(x = data$num_comments), bins = 10)
ggplot(data = data) + geom_histogram(mapping = aes(x = data$num_comments), bins = 10)
ggplot(data = data) + geom_histogram(mapping = aes(x = num_comments), bins = 10)
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")+
geom_density()
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")+
geom_density(mapping = aes(x = num_comments))
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")+
geom_density(mapping = aes(x = num_comments, alpha = 0.2))
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")+
geom_freqpoly(mapping = aes(x = num_comments, alpha = 0.2))
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")+
sum(data_under_1000$num_comments)
ggplot(data = data, mapping = aes(x = created_utc, y = num_comments, col = score)) +
geom_point(size = 1) +
scale_color_gradient(low = "red", high ="blue")
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")+
sum(data_under_1000$num_comments)
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")+
sum(data_under_1000$num_comments)
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white")
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white") +
labs(x = "Anzahl Kommentare", y = "Anzahl", title = "Anzahl Kommentare")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
gme = read.csv("GME_2021.csv")
plot(gme)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
ggplot(data = gme) + geom_line(mapping = aes(x=Date, y =Close))
ggplot(data = gme) + geom_line(mapping = aes(x=Date, y =Close))
View(gme)
ggplot(data = gme) + geom_points(mapping = aes(x=Date, y =Close))
ggplot(data = gme) + geom_point(mapping = aes(x=Date, y =Close))
ggplot(data = gme) + geom_point(mapping = aes(x=as.Date(Date), y =Close))
ggplot(data = gme) + geom_line(mapping = aes(x=as.Date(Date), y =Close))
ggplot(data = gme) + geom_line(mapping = aes(x=as.Date(Date), y =Close)) + labs(x= "Date" , y = "Closing of GME", title = "Stock price of GameStop in 2021")
Sys.setlocale("LC_TIME", "English")
ggplot(data = gme) + geom_line(mapping = aes(x=as.Date(Date), y =Close)) + labs(x= "Date" , y = "Closing of GME", title = "Stock price of GameStop in 2021")
ggplot(data = read.csv(file = "GME_2021.csv")) + geom_line(mapping = aes(x=as.Date(Date), y =Close)) + labs(x= "Date" , y = "Closing of GME", title = "Stock price of GameStop in 2021")
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete.csv")
getwd()
#plot
gme_date_discrete = read_csv("Data\gme_date_discrete.csv")
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete.csv")
library(tidyverse)
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete.csv")
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete.csv")
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete.csv")
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 15, face = "bold", color = "darkgrey"))
gme_date_discrete
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete.csv")
write.csv(gme_date_discrete, file = "Data/gme_date_discrete.csv")
write.csv(gme_date_discrete, file = "Data/gme_date_discrete_test.csv")
getwd()
library(tidyverse)
data = read_csv("Data/pushshift_first_quarter.csv")
data$created_utc = as.Date(as.POSIXct(data$created_utc, origin="1970-01-01"))
data = select(data, -c(d_,created))
ggplot(data = data, mapping = aes(x=created_utc, y = num_comments))+
geom_point()
data = data[str_detect(data$url, "comments"),] #url ohne comment sind bilder/memes/videos
data = data %>% filter(data$num_comments > 2) ##weniger als 3 Kommentare entweder irrelvant, gelÃ¶scht oder Bot
dim(data)
Anzahl_Kommentare = sum(data$num_comments)
write.csv(data, "Data/pushshift_clean_first_quarter.csv")
ggplot(data = data) +
geom_histogram(mapping = aes(x = num_comments), bins = 10,color="black", fill="white") +
labs(x = "Anzahl Kommentare", y = "Anzahl", title = "Anzahl Kommentare")
ggplot(data = data, mapping = aes(x = created_utc, y = num_comments, col = score)) +
geom_point(size = 1) +
scale_color_gradient(low = "red", high ="blue")
library(syuzhet)
library(tidyverse)
library(RedditExtractoR)
##### Find Threads von python ----------
threads = read.csv("Data/pushshift_clean_first_quarter.csv")
n = nrow(threads)
##### Find Threads von python ----------
threads = read.csv("Data/pushshift_clean.csv")
n = nrow(threads)
##### Find Threads von python ----------
threads = read.csv("Data/pushshift_clean_first_quarter.csv")
n = nrow(threads)
##### group Threads-------
gme_tibble_mean = tibble(Date = threads$created_utc,
Count_of_Comments = threads$num_comments,
URL =  threads$url,
mean = rep(0))
##### analyse thread -----------
summarize_thread = function(content_array){
anzahl_comments = nrow(content_array$comments)
sentiment = rep(0,anzahl_comments-1)
for(j in 2:anzahl_comments){
comment = content_array$comments$comment[j]
saetze = get_sentences(comment)
sentiment[j-1] = mean(get_sentiment(saetze))*content_array$comments$score[j] #weighted by score
}
return(mean(sentiment))
}
pb = txtProgressBar(min = 0, max = n, initial = 0, style = 3)
for (i in 1:n) { # gehe durch alle threads
tryCatch(expr = {thread_content = get_thread_content(gme_tibble_mean$URL[i])
gme_tibble_mean$mean[i] = summarize_thread(thread_content)},
error = function(e){
print(sprintf("Error im Lauf %s", i))
},
finally ={setTxtProgressBar(pb, i)})
}
pb = txtProgressBar(min = 0, max = n, initial = 0, style = 3)
Anzahl_Kommentare = sum(data$num_comments)
gme_tibble_mean = na.omit(gme_tibble_mean)
gme_date_discrete = select(gme_tibble_mean, - "URL") %>% group_by(Date) %>% summarise(mean = weighted.mean(x = mean, w = Count_of_Comments ), sum_com = sum(Count_of_Comments))
#save data
write.csv(gme_tibble_mean, file = "Data/gme_tibble_mean_first_quarter.csv")
write.csv(gme_date_discrete, file = "Data/gme_date_discrete_first_quarter.csv")
ggplot(data = gme_tibble_mean[1:n,])+
geom_point(mapping = aes(x = Date, y = mean, col = Count_of_Comments), show.legend = TRUE)+
scale_color_gradient(low="red", high="green")
##### Group means by date and weight by the number of comments per post
gme_tibble_mean = na.omit(gme_tibble_mean)
gme_date_discrete = select(gme_tibble_mean, - "URL") %>% group_by(Date) %>% summarise(mean = weighted.mean(x = mean, w = Count_of_Comments ), sum_com = sum(Count_of_Comments))
sum_of_comments_usable = sum(gme_date_discrete$sum_com)
#save data
write.csv(gme_tibble_mean, file = "Data/gme_tibble_mean_first_quarter.csv")
write.csv(gme_date_discrete, file = "Data/gme_date_discrete_first_quarter.csv")
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 15, face = "bold", color = "darkgrey"))
library(tidyverse)
sentiment_frame = read_csv("Data/gme_date_discrete_first_quarter.csv")
sentiment_frame = sentiment_frame[,-1]
sentiment_frame = sentiment_frame %>% mutate(week_day = weekdays((Date)))
week_day_add = rep(0,nrow(sentiment_frame))
week_day_add[sentiment_frame$week_day == "Sonntag"] = 1
week_day_add[sentiment_frame$week_day == "Samstag"] = 2
week_day_add[sentiment_frame$week_day == "Freitag"] = 0
week_day_add[sentiment_frame$week_day == "Donnerstag"] = 0
sentiment_frame = sentiment_frame %>% mutate(week_day_add = week_day_add)
sentiment_frame = sentiment_frame %>% mutate(day_to_pred = Date + week_day_add)
write.csv(sentiment_frame, "Data/sentiment_frame_no_lag_first_quarter.csv")
#----Librarys
library(tidyverse)
sentiment = read_csv(file = "Data/sentiment_frame_no_lag_first_quarter.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
gme_sap = read_csv(file = "Data/Stock_Data.csv")
sentiment = read_csv(file = "Data/sentiment_frame_no_lag_first_quarter.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
#---- Regression
lm_reg = lm(formula = gme_change~mean +sum_com + mean*sum_com, data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
summary(lm_reg_controlls)
ggplot(data = full_data) + geom_point(mapping = aes(x=mean, y = gme_change))
summary(lm_reg)
sentiment_frame = read_csv("Data/gme_date_discrete_first_quarter.csv")
sentiment_frame = sentiment_frame[,-1]
sentiment_frame = sentiment_frame %>% mutate(week_day = weekdays((Date)))
week_day_add = rep(0,nrow(sentiment_frame))
week_day_add[sentiment_frame$week_day == "Sonntag"] = 2
week_day_add[sentiment_frame$week_day == "Samstag"] = 3
week_day_add[sentiment_frame$week_day == "Freitag"] = 3
week_day_add[sentiment_frame$week_day == "Donnerstag"] = 1
sentiment_frame = sentiment_frame %>% mutate(week_day_add = week_day_add)
sentiment_frame = sentiment_frame %>% mutate(day_to_pred = Date + week_day_add)
write.csv(sentiment_frame, "Data/sentiment_frame_one_lag_first_quarter.csv")
gme_sap = read_csv(file = "Data/Stock_Data.csv")
sentiment = read_csv(file = "Data/sentiment_frame_one_lag_first_quarter.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
#---- Regression
lm_reg = lm(formula = gme_change~mean +sum_com + mean*sum_com, data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
summary(lm_reg)
summary(lm_reg_controlls)
#---- Regression
lm_reg = lm(formula = gme_change~mean +sum_com , data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
summary(lm_reg_controlls)
summary(lm_reg)
ggplot(data = full_data) + geom_point(mapping = aes(x=sum_com, y = gme_change))
#----Librarys
library(tidyverse)
ggplot(data = full_data, xlim = 200000 ) + geom_point(mapping = aes(x=sum_com, y = gme_change))
ggplot(data = full_data, xlim = c(0,20000) ) + geom_point(mapping = aes(x=sum_com, y = gme_change))
ggplot(data = full_data ) +
geom_point(mapping = aes(x=sum_com, y = gme_change)) +
xlim(0,20000)
ggplot(data = full_data ) +
geom_point(mapping = aes(x=sum_com, y = gme_change)) +
xlim(0,10000)
subset_data = full_data %>% filter(sum_com < 10000)
lm_reg_subset = lm(formula = gme_change~mean +sum_com , data = subset_data)
summary(lm_reg)
summary(lm_reg_subset)
gme_sap = read_csv(file = "Data/Stock_Data.csv")
sentiment = read_csv(file = "Data/sentiment_frame_no_lag_first_quarter.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
lm_reg = lm(formula = gme_change~mean +sum_com , data = full_data)
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
subset_data = full_data %>% filter(sum_com < 10000)
lm_reg_subset = lm(formula = gme_change~mean +sum_com , data = subset_data)
summary(lm_reg_subset)
View(gme_sap)
View(sentiment_frame)
View(sentiment)
View(full_data)
lm_reg = lm(formula = gme_change~mean +sum_com + sum_com * mean, data = full_data)
lm_reg_subset = lm(formula = gme_change~mean +sum_com+ sum_com * mean, data = subset_data)
summary(lm_reg_subset)
ggplot(data = full_data ) +
geom_point(mapping = aes(x=sum_com, y = gme_change)) +
xlim(0,10000)
hist(full_data$gme_change)
library(tidyverse)
up_down_ data = full_data %>% mutate(gme_change>0)
up_down_data = full_data %>% mutate(gme_change>0)
View(up_down_data)
up_down_data = full_data %>% mutate(gme_dummy = gme_change>0)
View(up_down_data)
dummy_reg = lm(gme_dummy ~ mean + sum_com, data = up_down_data)
summary(dummy_reg)
summary(up_down_data$gme_dummy)
dummy_reg = lm(gme_dummy ~sum_com, data = up_down_data)
summary(dummy_reg)
dummy_reg = lm(gme_dummy ~mean, data = up_down_data)
summary(dummy_reg)
dummy_reg = lm(gme_dummy ~ sp_change, data = up_down_data)
summary(dummy_reg)
source("D:/Program Files (x86)/OneDrive/Dokumente/Coding/R_Spielerei/Wallstreet_bets/Wallstreet_Bets/regression.R")
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete_first_quarter.csv")
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 15, face = "bold", color = "darkgrey"))
library(tidyverse)
#plot
gme_date_discrete = read_csv("Data/gme_date_discrete_first_quarter.csv")
ggplot(data = filter(gme_date_discrete))+  #, Date > "2022-02-05")
geom_point(mapping = aes(x = Date, y = mean, col = sum_com), show.legend = TRUE)+
scale_color_gradient(low="red", high="green") +
geom_hline(yintercept = 0) +
labs(title = "Game Stop Sentiment im Subreddit WallstreetBets im Jahr 2021\n", x = "Datum", y = "Durchschnittliches Sentiment", color = "Anzahl Kommentare") +
theme(plot.title = element_text(size = 15, face = "bold", color = "darkgrey"))
gme_sap = read_csv(file = "Data/Stock_Data.csv")
sentiment = read_csv(file = "Data/sentiment_frame_no_lag_first_quarter.csv")
sentiment = sentiment %>% select(-Date)
sentiment = sentiment[,-1]
full_data = inner_join(gme_sap, sentiment, by = c ("Date" = "day_to_pred"))
full_data = full_data %>% select(-c(Close.x, lag, Close.y, lag1, lag2,lag3))
lm_reg = lm(formula = gme_change~mean +sum_com + sum_com * mean, data = full_data)
lm_reg
lm_reg_controlls = lm(formula = gme_change~mean +sum_com + mean*sum_com + sp_change  +lag(sp_change,1) + lag(sp_change, 2) + lag(sp_change, 3),
data = full_data)
subset_data = full_data %>% filter(sum_com < 10000)
lm_reg_subset = lm(formula = gme_change~mean +sum_com+ sum_com * mean, data = subset_data)
summary(lm_reg_subset)
